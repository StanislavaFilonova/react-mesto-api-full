{"ast":null,"code":"import _toConsumableArray from\"/Users/Stasya/Desktop/dev/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/Stasya/Desktop/dev/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{Route,Switch,useHistory,Redirect}from\"react-router-dom\";import Header from\"../components/Header\";import Main from\"../components/Main\";import Footer from\"../components/Footer\";import ProtectedRoute from\"./ProtectedRoute\";import auth from\"../utils/Auth\";import api from\"../utils/Api\";import EditProfilePopup from\"../components/EditProfilePopup\";import EditAvatarPopup from\"../components/EditAvatarPopup\";import AddPlacePopup from\"../components/AddPlacePopup\";import ImagePopup from\"../components/ImagePopup\";import DeleteCardPopup from\"./DeleteCardPopup.js\";import CurrentUserContext from\"../contexts/CurrentUserContext\";import Login from\"./Login\";import Register from\"./Register\";import InfoToolTip from\"./InfoToolTip\";//---------------------------------------------------------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//Создаем хуки, управляющие внутренним состоянием.\nvar _React$useState=React.useState({}),_React$useState2=_slicedToArray(_React$useState,2),currentUser=_React$useState2[0],setCurrentUser=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),cards=_React$useState4[0],setCards=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),isLoggedIn=_React$useState6[0],setIsLoggedIn=_React$useState6[1];var _React$useState7=React.useState(\"\"),_React$useState8=_slicedToArray(_React$useState7,2),email=_React$useState8[0],setEmail=_React$useState8[1];var history=useHistory();var _React$useState9=React.useState({name:\"\",link:\"\"}),_React$useState10=_slicedToArray(_React$useState9,2),selectedCard=_React$useState10[0],setSelectedCard=_React$useState10[1];var _React$useState11=React.useState({}),_React$useState12=_slicedToArray(_React$useState11,2),deletedCard=_React$useState12[0],setDeletedCard=_React$useState12[1];var _React$useState13=React.useState(false),_React$useState14=_slicedToArray(_React$useState13,2),isEditProfilePopupOpen=_React$useState14[0],setIsEditProfilePopupOpen=_React$useState14[1];var _React$useState15=React.useState(false),_React$useState16=_slicedToArray(_React$useState15,2),isAddPlacePopupOpen=_React$useState16[0],setIsAddPlacePopupOpen=_React$useState16[1];var _React$useState17=React.useState(false),_React$useState18=_slicedToArray(_React$useState17,2),isEditAvatarPopupOpen=_React$useState18[0],setIsEditAvatarPopupOpen=_React$useState18[1];var _React$useState19=React.useState(false),_React$useState20=_slicedToArray(_React$useState19,2),isDeleteCardPopup=_React$useState20[0],setIsDeleteCardPopup=_React$useState20[1];// const [isInfoToolTipPopupOpen, setIsInfoToolTipPopupOpen] =\n//     React.useState(false);\nvar _React$useState21=React.useState({status:false,open:false}),_React$useState22=_slicedToArray(_React$useState21,2),isInfoToolTipPopup=_React$useState22[0],setIsInfoToolTipPopup=_React$useState22[1];var _React$useState23=React.useState(false),_React$useState24=_slicedToArray(_React$useState23,2),isLoading=_React$useState24[0],setIsLoading=_React$useState24[1];// const [isSuccess, setIsSuccess] = React.useState(false);\nvar _React$useState25=React.useState(\"Сохранить\"),_React$useState26=_slicedToArray(_React$useState25,2),profilePopupButtonText=_React$useState26[0],setProfilePopupButtonText=_React$useState26[1];var _React$useState27=React.useState(\"Сохранить\"),_React$useState28=_slicedToArray(_React$useState27,2),avatarPopupButtonText=_React$useState28[0],setAvatarPopupButtonText=_React$useState28[1];var _React$useState29=React.useState(\"Создать\"),_React$useState30=_slicedToArray(_React$useState29,2),placePopupButtonText=_React$useState30[0],setPlacePopupButtonText=_React$useState30[1];var _React$useState31=React.useState(\"Да\"),_React$useState32=_slicedToArray(_React$useState31,2),removePopupButtonText=_React$useState32[0],setRemovePopupButtonText=_React$useState32[1];//---------------------------------------------------------------------------------------------------------------------\nfunction handleEditAvatarClick(){setIsEditAvatarPopupOpen(true);}function handleEditProfileClick(){setIsEditProfilePopupOpen(true);}function handleAddPlaceClick(){setIsAddPlacePopupOpen(true);}function handleCardClick(card){setSelectedCard(card);}function handleCardDeleteClick(card){setIsDeleteCardPopup(true);setDeletedCard(card);}//Функция закрытия всех попапов\nfunction closeAllPopups(){setIsEditAvatarPopupOpen(false);setIsEditProfilePopupOpen(false);setIsAddPlacePopupOpen(false);setIsDeleteCardPopup(false);setDeletedCard({link:\"\",name:\"\"});setSelectedCard({link:\"\",name:\"\"});// setIsInfoToolTipPopupOpen(false);\nsetIsInfoToolTipPopup({status:false,open:false});}//---------------------------------------------------------------------------------------------------------------------\n// Настраиваем хук, который устанавливает колбэки. Функция будет вызвана после того, как будут внесены все изменения в DOM.\nReact.useEffect(function(){setIsLoading(true);// Чтение данных с сервера (информация о пользователе и карточках)\n// Проверим, авторизован ли пользователь\nif(isLoggedIn){Promise.all([api.getUserInfo(),api.getCards()]).then(function(_ref){var _ref2=_slicedToArray(_ref,2),user=_ref2[0],cards=_ref2[1];setCurrentUser(user);setCards(cards);}).catch(function(err){console.log(err);}).finally(function(){return setIsLoading(false);});}},[isLoggedIn]);// Функция, которая отвечает за закрытие попапа нажатием кнопки \"escape\"\nReact.useEffect(function(){function handleEscapeClick(evt){if(evt.key===\"Escape\"){closeAllPopups();}}document.addEventListener(\"keyup\",handleEscapeClick);return function(){document.removeEventListener(\"keyup\",handleEscapeClick);};},// eslint-disable-next-line react-hooks/exhaustive-deps\n[]);// Функция, которая отвечает за закрытие попапов по клику вне формы\nReact.useEffect(function(){function handleOverlayClick(evt){if(evt.target.classList.contains(\"popup\")){closeAllPopups();}}document.addEventListener(\"mousedown\",handleOverlayClick);return function(){document.removeEventListener(\"mousedown\",handleOverlayClick);};},// колбэк-очистка\n[]);// Хук для проверки токена при каждом монтировании компонента App\nReact.useEffect(function(){handleIsToken();},// eslint-disable-next-line react-hooks/exhaustive-deps\n[]);// Проверяем есть ли токен в хранилище, если он есть, устанавливаем адрес почты и отпраляем пользователя на домашнюю страницу\nfunction handleIsToken(){var jwt=localStorage.getItem(\"jwt\");if(jwt){auth.checkToken(jwt).then(function(res){setEmail(res.data.email);setIsLoggedIn(true);history.push(\"/home\");}).catch(function(){console.log(\"Переданный токен некорректен.\");setIsLoggedIn(false);});}}//---------------------------------------------------------------------------------------------------------------------\n// Функция обновления пользователя\nfunction handleUpdateUser(user){setProfilePopupButtonText(\"Сохранение...\");api.editProfile(user).then(function(res){setCurrentUser(res);closeAllPopups();}).catch(function(err){console.log(err);}).finally(function(){setProfilePopupButtonText(\"Сохранить\");});}function handleUpdateAvatar(avatar){setAvatarPopupButtonText(\"Сохранение...\");api.renewAvatar(avatar)// 1й аргумент с типом String (avatarLink в Api.js:renewAvatar)\n.then(function(avatar){setCurrentUser(avatar);closeAllPopups();}).catch(function(err){console.log(err);}).finally(function(){setAvatarPopupButtonText(\"Сохранить\");});}// Функция добавления места\nfunction handleAddPlaceSubmit(cardNew){setPlacePopupButtonText(\"Добавление...\");api.addCard(cardNew).then(function(res){setCards([res].concat(_toConsumableArray(cards)));closeAllPopups();}).catch(function(err){console.log(err);}).finally(function(){setPlacePopupButtonText(\"Создать\");});}//  Функция удаления карточки: устанавливаем текст на кнопку при удалении карточки\nfunction handleCardDelete(card){setRemovePopupButtonText(\"Удаление...\");// Исключаем из массива удаленную карточку\napi.deleteCard(card._id).then(function(){// Исключаем из массива удаленную карточку\nvar newCards=cards.filter(function(currentCard){return currentCard._id!==card._id;});// Обновляем состояние\nsetCards(newCards);closeAllPopups();}).catch(function(err){console.log(err);}).finally(function(){setRemovePopupButtonText(\"Да\");});}// Установка лайка карточкам\nfunction handleCardLike(card){// Ввод переменной, где мы проверяем при помощи метода some, удовлетворяет ли какой-либо элемент массива условию, заданному в передаваемой функции.\nvar isLiked=card.likes.some(function(like){return like._id===currentUser._id;});api.changeLike(card._id,!isLiked).then(function(res){setCards(function(condition){return condition.map(function(currentCard){return currentCard._id===card._id?res:currentCard;});});}).catch(function(err){console.log(err);});}// Проверяем зарегистрирован ли пользователь\nfunction handleIsRegister(userEmail,userPassword,resetForm){auth.register(userEmail,userPassword).then(function(res){setIsInfoToolTipPopup({status:true,open:true});// setIsInfoToolTipPopupOpen(true);\n// setIsSuccess(true);\nhistory.push(\"/signin\");resetForm();}).catch(function(err){if(err.status===400){console.log(\"400 - некорректно заполнено одно из полей\");}setIsInfoToolTipPopup({status:false,open:true});// setIsInfoToolTipPopupOpen(true);\n// setIsSuccess(false);\n});}function handleIsLogin(userEmail,userPassword,resetForm){auth.login(userEmail,userPassword).then(function(res){if(res.token){localStorage.setItem(\"jwt\",res.token);resetForm();setIsLoggedIn(true);setEmail(email);history.push(\"/home\");}}).catch(function(err){if(err.status===400){console.log(\"400 - не передано одно из полей\");// setIsSuccess(false);\n// setIsInfoToolTipPopupOpen(true);\n}else if(err.status===401){console.log(\"401 - пользователь с email не найден\");// setIsInfoToolTipPopupOpen(true);\n}setIsInfoToolTipPopup({status:false,open:true});});}function handleSignOut(){setIsLoggedIn(false);localStorage.removeItem(\"jwt\");history.push(\"/signin\");}//---------------------------------------------------------------------------------------------------------------------\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"page\",children:/*#__PURE__*/_jsxs(CurrentUserContext.Provider,{value:currentUser,children:[/*#__PURE__*/_jsx(Header,{email:email,onSignOut:handleSignOut}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(ProtectedRoute,{exact:true,path:\"/home\",isLoggedIn:isLoggedIn,onEditAvatar:handleEditAvatarClick,onEditProfile:handleEditProfileClick,onAddPlace:handleAddPlaceClick,onCardClick:handleCardClick,onCardLike:handleCardLike,onCardDelete:handleCardDeleteClick,cards:cards,component:Main,isLoading:isLoading}),/*#__PURE__*/_jsx(Route,{path:\"/signin\",children:/*#__PURE__*/_jsx(Login,{onLogin:handleIsLogin,history:history})}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",children:/*#__PURE__*/_jsx(Register,{onRegister:handleIsRegister,history:history})}),/*#__PURE__*/_jsx(Route,{children:isLoggedIn?/*#__PURE__*/_jsx(Redirect,{to:\"/home\"}):/*#__PURE__*/_jsx(Redirect,{to:\"/signin\"})})]}),/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsx(AddPlacePopup,{buttonSubmitText:placePopupButtonText,isOpen:isAddPlacePopupOpen,onAddPlace:handleAddPlaceSubmit,onClose:closeAllPopups}),/*#__PURE__*/_jsx(EditAvatarPopup,{buttonSubmitText:avatarPopupButtonText,isOpen:isEditAvatarPopupOpen,onUpdateAvatar:handleUpdateAvatar,onClose:closeAllPopups}),/*#__PURE__*/_jsx(EditProfilePopup,{buttonSubmitText:profilePopupButtonText,isOpen:isEditProfilePopupOpen,onUpdateUser:handleUpdateUser,onClose:closeAllPopups}),/*#__PURE__*/_jsx(DeleteCardPopup,{isOpen:isDeleteCardPopup,buttonSubmitText:removePopupButtonText,card:deletedCard,onSubmitDeleteCard:handleCardDelete,onClose:closeAllPopups}),/*#__PURE__*/_jsx(ImagePopup,{card:selectedCard,onClose:closeAllPopups}),/*#__PURE__*/_jsx(InfoToolTip,{isOpen:isInfoToolTipPopup.open//isOpen={isInfoToolTipPopupOpen}\n,onClose:closeAllPopups//isSuccess={isInfoToolTipPopupOpen}\n,isSuccess:isInfoToolTipPopup.status})]})});}export default App;","map":{"version":3,"sources":["/Users/Stasya/Desktop/dev/react-mesto-api-full/frontend/src/components/App.js"],"names":["React","Route","Switch","useHistory","Redirect","Header","Main","Footer","ProtectedRoute","auth","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","DeleteCardPopup","CurrentUserContext","Login","Register","InfoToolTip","App","useState","currentUser","setCurrentUser","cards","setCards","isLoggedIn","setIsLoggedIn","email","setEmail","history","name","link","selectedCard","setSelectedCard","deletedCard","setDeletedCard","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeleteCardPopup","setIsDeleteCardPopup","status","open","isInfoToolTipPopup","setIsInfoToolTipPopup","isLoading","setIsLoading","profilePopupButtonText","setProfilePopupButtonText","avatarPopupButtonText","setAvatarPopupButtonText","placePopupButtonText","setPlacePopupButtonText","removePopupButtonText","setRemovePopupButtonText","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleCardDeleteClick","closeAllPopups","useEffect","Promise","all","getUserInfo","getCards","then","user","catch","err","console","log","finally","handleEscapeClick","evt","key","document","addEventListener","removeEventListener","handleOverlayClick","target","classList","contains","handleIsToken","jwt","localStorage","getItem","checkToken","res","data","push","handleUpdateUser","editProfile","handleUpdateAvatar","avatar","renewAvatar","handleAddPlaceSubmit","cardNew","addCard","handleCardDelete","deleteCard","_id","newCards","filter","currentCard","handleCardLike","isLiked","likes","some","like","changeLike","condition","map","handleIsRegister","userEmail","userPassword","resetForm","register","handleIsLogin","login","token","setItem","handleSignOut","removeItem"],"mappings":"kSAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,UAAxB,CAAoCC,QAApC,KAAoD,kBAApD,CAEA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CAEA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CAEA,MAAOC,CAAAA,IAAP,KAAiB,eAAjB,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,gCAA7B,CACA,MAAOC,CAAAA,eAAP,KAA4B,+BAA5B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,sBAA5B,CAEA,MAAOC,CAAAA,kBAAP,KAA+B,gCAA/B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA;wFAEA,QAASC,CAAAA,GAAT,EAAe,CACX;AACA,oBAAsCpB,KAAK,CAACqB,QAAN,CAAe,EAAf,CAAtC,oDAAOC,WAAP,qBAAoBC,cAApB,qBACA,qBAA0BvB,KAAK,CAACqB,QAAN,CAAe,EAAf,CAA1B,qDAAOG,KAAP,qBAAcC,QAAd,qBACA,qBAAoCzB,KAAK,CAACqB,QAAN,CAAe,KAAf,CAApC,qDAAOK,UAAP,qBAAmBC,aAAnB,qBACA,qBAA0B3B,KAAK,CAACqB,QAAN,CAAe,EAAf,CAA1B,qDAAOO,KAAP,qBAAcC,QAAd,qBAEA,GAAMC,CAAAA,OAAO,CAAG3B,UAAU,EAA1B,CAEA,qBAAwCH,KAAK,CAACqB,QAAN,CAAe,CACnDU,IAAI,CAAE,EAD6C,CAEnDC,IAAI,CAAE,EAF6C,CAAf,CAAxC,sDAAOC,YAAP,sBAAqBC,eAArB,sBAKA,sBAAsClC,KAAK,CAACqB,QAAN,CAAe,EAAf,CAAtC,uDAAOc,WAAP,sBAAoBC,cAApB,sBAEA,sBACIpC,KAAK,CAACqB,QAAN,CAAe,KAAf,CADJ,uDAAOgB,sBAAP,sBAA+BC,yBAA/B,sBAEA,sBAAsDtC,KAAK,CAACqB,QAAN,CAAe,KAAf,CAAtD,uDAAOkB,mBAAP,sBAA4BC,sBAA5B,sBACA,sBACIxC,KAAK,CAACqB,QAAN,CAAe,KAAf,CADJ,uDAAOoB,qBAAP,sBAA8BC,wBAA9B,sBAEA,sBAAkD1C,KAAK,CAACqB,QAAN,CAAe,KAAf,CAAlD,uDAAOsB,iBAAP,sBAA0BC,oBAA1B,sBACA;AACA;AACA,sBAAoD5C,KAAK,CAACqB,QAAN,CAAe,CAC/DwB,MAAM,CAAE,KADuD,CAE/DC,IAAI,CAAE,KAFyD,CAAf,CAApD,uDAAOC,kBAAP,sBAA2BC,qBAA3B,sBAIA,sBAAkChD,KAAK,CAACqB,QAAN,CAAe,KAAf,CAAlC,uDAAO4B,SAAP,sBAAkBC,YAAlB,sBACA;AAEA,sBACIlD,KAAK,CAACqB,QAAN,CAAe,WAAf,CADJ,uDAAO8B,sBAAP,sBAA+BC,yBAA/B,sBAEA,sBACIpD,KAAK,CAACqB,QAAN,CAAe,WAAf,CADJ,uDAAOgC,qBAAP,sBAA8BC,wBAA9B,sBAEA,sBACItD,KAAK,CAACqB,QAAN,CAAe,SAAf,CADJ,uDAAOkC,oBAAP,sBAA6BC,uBAA7B,sBAEA,sBACIxD,KAAK,CAACqB,QAAN,CAAe,IAAf,CADJ,uDAAOoC,qBAAP,sBAA8BC,wBAA9B,sBAEA;AAEA,QAASC,CAAAA,qBAAT,EAAiC,CAC7BjB,wBAAwB,CAAC,IAAD,CAAxB,CACH,CAED,QAASkB,CAAAA,sBAAT,EAAkC,CAC9BtB,yBAAyB,CAAC,IAAD,CAAzB,CACH,CAED,QAASuB,CAAAA,mBAAT,EAA+B,CAC3BrB,sBAAsB,CAAC,IAAD,CAAtB,CACH,CAED,QAASsB,CAAAA,eAAT,CAAyBC,IAAzB,CAA+B,CAC3B7B,eAAe,CAAC6B,IAAD,CAAf,CACH,CAED,QAASC,CAAAA,qBAAT,CAA+BD,IAA/B,CAAqC,CACjCnB,oBAAoB,CAAC,IAAD,CAApB,CACAR,cAAc,CAAC2B,IAAD,CAAd,CACH,CAED;AACA,QAASE,CAAAA,cAAT,EAA0B,CACtBvB,wBAAwB,CAAC,KAAD,CAAxB,CACAJ,yBAAyB,CAAC,KAAD,CAAzB,CACAE,sBAAsB,CAAC,KAAD,CAAtB,CACAI,oBAAoB,CAAC,KAAD,CAApB,CACAR,cAAc,CAAC,CAAEJ,IAAI,CAAE,EAAR,CAAYD,IAAI,CAAE,EAAlB,CAAD,CAAd,CACAG,eAAe,CAAC,CAAEF,IAAI,CAAE,EAAR,CAAYD,IAAI,CAAE,EAAlB,CAAD,CAAf,CACA;AACAiB,qBAAqB,CAAC,CAAEH,MAAM,CAAE,KAAV,CAAiBC,IAAI,CAAE,KAAvB,CAAD,CAArB,CACH,CAED;AAEA;AACA9C,KAAK,CAACkE,SAAN,CAAgB,UAAM,CAClBhB,YAAY,CAAC,IAAD,CAAZ,CACA;AACA;AACA,GAAIxB,UAAJ,CAAgB,CACZyC,OAAO,CAACC,GAAR,CAAY,CAAC1D,GAAG,CAAC2D,WAAJ,EAAD,CAAoB3D,GAAG,CAAC4D,QAAJ,EAApB,CAAZ,EACKC,IADL,CACU,cAAmB,kCAAjBC,IAAiB,UAAXhD,KAAW,UACrBD,cAAc,CAACiD,IAAD,CAAd,CACA/C,QAAQ,CAACD,KAAD,CAAR,CACH,CAJL,EAKKiD,KALL,CAKW,SAACC,GAAD,CAAS,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACH,CAPL,EAQKG,OARL,CAQa,iBAAM3B,CAAAA,YAAY,CAAC,KAAD,CAAlB,EARb,EASH,CACJ,CAfD,CAeG,CAACxB,UAAD,CAfH,EAiBA;AACA1B,KAAK,CAACkE,SAAN,CACI,UAAM,CACF,QAASY,CAAAA,iBAAT,CAA2BC,GAA3B,CAAgC,CAC5B,GAAIA,GAAG,CAACC,GAAJ,GAAY,QAAhB,CAA0B,CACtBf,cAAc,GACjB,CACJ,CACDgB,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmCJ,iBAAnC,EAEA,MAAO,WAAM,CACTG,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,CAAsCL,iBAAtC,EACH,CAFD,CAGH,CAZL,CAYO;AACH,EAbJ,EAgBA;AACA9E,KAAK,CAACkE,SAAN,CACI,UAAM,CACF,QAASkB,CAAAA,kBAAT,CAA4BL,GAA5B,CAAiC,CAC7B,GAAIA,GAAG,CAACM,MAAJ,CAAWC,SAAX,CAAqBC,QAArB,CAA8B,OAA9B,CAAJ,CAA4C,CACxCtB,cAAc,GACjB,CACJ,CACDgB,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,CAAuCE,kBAAvC,EAEA,MAAO,WAAM,CACTH,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,CAA0CC,kBAA1C,EACH,CAFD,CAGH,CAZL,CAaI;AACA,EAdJ,EAiBA;AACApF,KAAK,CAACkE,SAAN,CACI,UAAM,CACFsB,aAAa,GAChB,CAHL,CAGO;AACH,EAJJ,EAMA;AACA,QAASA,CAAAA,aAAT,EAAyB,CACrB,GAAMC,CAAAA,GAAG,CAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ,CACA,GAAIF,GAAJ,CAAS,CACLhF,IAAI,CAACmF,UAAL,CAAgBH,GAAhB,EACKlB,IADL,CACU,SAACsB,GAAD,CAAS,CACXhE,QAAQ,CAACgE,GAAG,CAACC,IAAJ,CAASlE,KAAV,CAAR,CACAD,aAAa,CAAC,IAAD,CAAb,CACAG,OAAO,CAACiE,IAAR,CAAa,OAAb,EACH,CALL,EAMKtB,KANL,CAMW,UAAM,CACTE,OAAO,CAACC,GAAR,CAAY,+BAAZ,EACAjD,aAAa,CAAC,KAAD,CAAb,CACH,CATL,EAUH,CACJ,CAED;AAEA;AACA,QAASqE,CAAAA,gBAAT,CAA0BxB,IAA1B,CAAgC,CAC5BpB,yBAAyB,CAAC,eAAD,CAAzB,CACA1C,GAAG,CAACuF,WAAJ,CAAgBzB,IAAhB,EACKD,IADL,CACU,SAACsB,GAAD,CAAS,CACXtE,cAAc,CAACsE,GAAD,CAAd,CACA5B,cAAc,GACjB,CAJL,EAKKQ,KALL,CAKW,SAACC,GAAD,CAAS,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACH,CAPL,EAQKG,OARL,CAQa,UAAM,CACXzB,yBAAyB,CAAC,WAAD,CAAzB,CACH,CAVL,EAWH,CAED,QAAS8C,CAAAA,kBAAT,CAA4BC,MAA5B,CAAoC,CAChC7C,wBAAwB,CAAC,eAAD,CAAxB,CACA5C,GAAG,CAAC0F,WAAJ,CAAgBD,MAAhB,CAAwB;AAAxB,CACK5B,IADL,CACU,SAAC4B,MAAD,CAAY,CACd5E,cAAc,CAAC4E,MAAD,CAAd,CACAlC,cAAc,GACjB,CAJL,EAKKQ,KALL,CAKW,SAACC,GAAD,CAAS,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACH,CAPL,EAQKG,OARL,CAQa,UAAM,CACXvB,wBAAwB,CAAC,WAAD,CAAxB,CACH,CAVL,EAWH,CAED;AACA,QAAS+C,CAAAA,oBAAT,CAA8BC,OAA9B,CAAuC,CACnC9C,uBAAuB,CAAC,eAAD,CAAvB,CACA9C,GAAG,CAAC6F,OAAJ,CAAYD,OAAZ,EACK/B,IADL,CACU,SAACsB,GAAD,CAAS,CACXpE,QAAQ,EAAEoE,GAAF,4BAAUrE,KAAV,GAAR,CACAyC,cAAc,GACjB,CAJL,EAKKQ,KALL,CAKW,SAACC,GAAD,CAAS,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACH,CAPL,EAQKG,OARL,CAQa,UAAM,CACXrB,uBAAuB,CAAC,SAAD,CAAvB,CACH,CAVL,EAWH,CAED;AACA,QAASgD,CAAAA,gBAAT,CAA0BzC,IAA1B,CAAgC,CAC5BL,wBAAwB,CAAC,aAAD,CAAxB,CACA;AACAhD,GAAG,CAAC+F,UAAJ,CAAe1C,IAAI,CAAC2C,GAApB,EACKnC,IADL,CACU,UAAM,CACR;AACA,GAAMoC,CAAAA,QAAQ,CAAGnF,KAAK,CAACoF,MAAN,CACb,SAACC,WAAD,QAAiBA,CAAAA,WAAW,CAACH,GAAZ,GAAoB3C,IAAI,CAAC2C,GAA1C,EADa,CAAjB,CAGA;AACAjF,QAAQ,CAACkF,QAAD,CAAR,CACA1C,cAAc,GACjB,CATL,EAUKQ,KAVL,CAUW,SAACC,GAAD,CAAS,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACH,CAZL,EAaKG,OAbL,CAaa,UAAM,CACXnB,wBAAwB,CAAC,IAAD,CAAxB,CACH,CAfL,EAgBH,CAED;AACA,QAASoD,CAAAA,cAAT,CAAwB/C,IAAxB,CAA8B,CAC1B;AACA,GAAMgD,CAAAA,OAAO,CAAGhD,IAAI,CAACiD,KAAL,CAAWC,IAAX,CAAgB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACR,GAAL,GAAapF,WAAW,CAACoF,GAAnC,EAAhB,CAAhB,CACAhG,GAAG,CAACyG,UAAJ,CAAepD,IAAI,CAAC2C,GAApB,CAAyB,CAACK,OAA1B,EACKxC,IADL,CACU,SAACsB,GAAD,CAAS,CACXpE,QAAQ,CAAC,SAAC2F,SAAD,QACLA,CAAAA,SAAS,CAACC,GAAV,CAAc,SAACR,WAAD,QACVA,CAAAA,WAAW,CAACH,GAAZ,GAAoB3C,IAAI,CAAC2C,GAAzB,CAA+Bb,GAA/B,CAAqCgB,WAD3B,EAAd,CADK,EAAD,CAAR,CAKH,CAPL,EAQKpC,KARL,CAQW,SAACC,GAAD,CAAS,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACH,CAVL,EAWH,CACD;AACA,QAAS4C,CAAAA,gBAAT,CAA0BC,SAA1B,CAAqCC,YAArC,CAAmDC,SAAnD,CAA8D,CAC1DhH,IAAI,CAACiH,QAAL,CAAcH,SAAd,CAAyBC,YAAzB,EACKjD,IADL,CACU,SAACsB,GAAD,CAAS,CACX7C,qBAAqB,CAAC,CAAEH,MAAM,CAAE,IAAV,CAAgBC,IAAI,CAAE,IAAtB,CAAD,CAArB,CACA;AACA;AACAhB,OAAO,CAACiE,IAAR,CAAa,SAAb,EACA0B,SAAS,GACZ,CAPL,EAQKhD,KARL,CAQW,SAACC,GAAD,CAAS,CACZ,GAAIA,GAAG,CAAC7B,MAAJ,GAAe,GAAnB,CAAwB,CACpB8B,OAAO,CAACC,GAAR,CAAY,2CAAZ,EACH,CACD5B,qBAAqB,CAAC,CAAEH,MAAM,CAAE,KAAV,CAAiBC,IAAI,CAAE,IAAvB,CAAD,CAArB,CACA;AACA;AACH,CAfL,EAgBH,CAED,QAAS6E,CAAAA,aAAT,CAAuBJ,SAAvB,CAAkCC,YAAlC,CAAgDC,SAAhD,CAA2D,CACvDhH,IAAI,CAACmH,KAAL,CAAWL,SAAX,CAAsBC,YAAtB,EACKjD,IADL,CACU,SAACsB,GAAD,CAAS,CACX,GAAIA,GAAG,CAACgC,KAAR,CAAe,CACXnC,YAAY,CAACoC,OAAb,CAAqB,KAArB,CAA4BjC,GAAG,CAACgC,KAAhC,EACAJ,SAAS,GACT9F,aAAa,CAAC,IAAD,CAAb,CACAE,QAAQ,CAACD,KAAD,CAAR,CACAE,OAAO,CAACiE,IAAR,CAAa,OAAb,EACH,CACJ,CATL,EAUKtB,KAVL,CAUW,SAACC,GAAD,CAAS,CACZ,GAAIA,GAAG,CAAC7B,MAAJ,GAAe,GAAnB,CAAwB,CACpB8B,OAAO,CAACC,GAAR,CAAY,iCAAZ,EACA;AACA;AACH,CAJD,IAIO,IAAIF,GAAG,CAAC7B,MAAJ,GAAe,GAAnB,CAAwB,CAC3B8B,OAAO,CAACC,GAAR,CAAY,sCAAZ,EACA;AACH,CACD5B,qBAAqB,CAAC,CAAEH,MAAM,CAAE,KAAV,CAAiBC,IAAI,CAAE,IAAvB,CAAD,CAArB,CACH,CApBL,EAqBH,CAED,QAASiF,CAAAA,aAAT,EAAyB,CACrBpG,aAAa,CAAC,KAAD,CAAb,CACA+D,YAAY,CAACsC,UAAb,CAAwB,KAAxB,EACAlG,OAAO,CAACiE,IAAR,CAAa,SAAb,EACH,CAED;AACA,mBACI,YAAK,SAAS,CAAC,MAAf,uBACI,MAAC,kBAAD,CAAoB,QAApB,EAA6B,KAAK,CAAEzE,WAApC,wBAEI,KAAC,MAAD,EAAQ,KAAK,CAAEM,KAAf,CAAsB,SAAS,CAAEmG,aAAjC,EAFJ,cAGI,MAAC,MAAD,yBACI,KAAC,cAAD,EACI,KAAK,KADT,CAEI,IAAI,CAAC,OAFT,CAGI,UAAU,CAAErG,UAHhB,CAII,YAAY,CAAEiC,qBAJlB,CAKI,aAAa,CAAEC,sBALnB,CAMI,UAAU,CAAEC,mBANhB,CAOI,WAAW,CAAEC,eAPjB,CAQI,UAAU,CAAEgD,cARhB,CASI,YAAY,CAAE9C,qBATlB,CAUI,KAAK,CAAExC,KAVX,CAWI,SAAS,CAAElB,IAXf,CAYI,SAAS,CAAE2C,SAZf,EADJ,cAeI,KAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,uBACI,KAAC,KAAD,EAAO,OAAO,CAAE0E,aAAhB,CAA+B,OAAO,CAAE7F,OAAxC,EADJ,EAfJ,cAkBI,KAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,uBACI,KAAC,QAAD,EACI,UAAU,CAAEwF,gBADhB,CAEI,OAAO,CAAExF,OAFb,EADJ,EAlBJ,cAwBI,KAAC,KAAD,WACKJ,UAAU,cACP,KAAC,QAAD,EAAU,EAAE,CAAC,OAAb,EADO,cAGP,KAAC,QAAD,EAAU,EAAE,CAAC,SAAb,EAJR,EAxBJ,GAHJ,cAqCI,KAAC,MAAD,IArCJ,cAwCI,KAAC,aAAD,EACI,gBAAgB,CAAE6B,oBADtB,CAEI,MAAM,CAAEhB,mBAFZ,CAGI,UAAU,CAAE8D,oBAHhB,CAII,OAAO,CAAEpC,cAJb,EAxCJ,cAgDI,KAAC,eAAD,EACI,gBAAgB,CAAEZ,qBADtB,CAEI,MAAM,CAAEZ,qBAFZ,CAGI,cAAc,CAAEyD,kBAHpB,CAII,OAAO,CAAEjC,cAJb,EAhDJ,cAwDI,KAAC,gBAAD,EACI,gBAAgB,CAAEd,sBADtB,CAEI,MAAM,CAAEd,sBAFZ,CAGI,YAAY,CAAE2D,gBAHlB,CAII,OAAO,CAAE/B,cAJb,EAxDJ,cA+DI,KAAC,eAAD,EACI,MAAM,CAAEtB,iBADZ,CAEI,gBAAgB,CAAEc,qBAFtB,CAGI,IAAI,CAAEtB,WAHV,CAII,kBAAkB,CAAEqE,gBAJxB,CAKI,OAAO,CAAEvC,cALb,EA/DJ,cAwEI,KAAC,UAAD,EAAY,IAAI,CAAEhC,YAAlB,CAAgC,OAAO,CAAEgC,cAAzC,EAxEJ,cA0EI,KAAC,WAAD,EACI,MAAM,CAAElB,kBAAkB,CAACD,IAC3B;AAFJ,CAGI,OAAO,CAAEmB,cACT;AAJJ,CAKI,SAAS,CAAElB,kBAAkB,CAACF,MALlC,EA1EJ,GADJ,EADJ,CAsFH,CAED,cAAezB,CAAAA,GAAf","sourcesContent":["import React from \"react\";\nimport { Route, Switch, useHistory, Redirect } from \"react-router-dom\";\n\nimport Header from \"../components/Header\";\nimport Main from \"../components/Main\";\nimport Footer from \"../components/Footer\";\n\nimport ProtectedRoute from \"./ProtectedRoute\";\n\nimport auth from \"../utils/Auth\";\nimport api from \"../utils/Api\";\n\nimport EditProfilePopup from \"../components/EditProfilePopup\";\nimport EditAvatarPopup from \"../components/EditAvatarPopup\";\nimport AddPlacePopup from \"../components/AddPlacePopup\";\nimport ImagePopup from \"../components/ImagePopup\";\nimport DeleteCardPopup from \"./DeleteCardPopup.js\";\n\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoToolTip from \"./InfoToolTip\";\n//---------------------------------------------------------------------------------------------------------------------\n\nfunction App() {\n    //Создаем хуки, управляющие внутренним состоянием.\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [cards, setCards] = React.useState([]);\n    const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n    const [email, setEmail] = React.useState(\"\");\n\n    const history = useHistory();\n\n    const [selectedCard, setSelectedCard] = React.useState({\n        name: \"\",\n        link: \"\",\n    });\n\n    const [deletedCard, setDeletedCard] = React.useState({});\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n        React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n        React.useState(false);\n    const [isDeleteCardPopup, setIsDeleteCardPopup] = React.useState(false);\n    // const [isInfoToolTipPopupOpen, setIsInfoToolTipPopupOpen] =\n    //     React.useState(false);\n    const [isInfoToolTipPopup, setIsInfoToolTipPopup] = React.useState({\n        status: false,\n        open: false,\n    });\n    const [isLoading, setIsLoading] = React.useState(false);\n    // const [isSuccess, setIsSuccess] = React.useState(false);\n\n    const [profilePopupButtonText, setProfilePopupButtonText] =\n        React.useState(\"Сохранить\");\n    const [avatarPopupButtonText, setAvatarPopupButtonText] =\n        React.useState(\"Сохранить\");\n    const [placePopupButtonText, setPlacePopupButtonText] =\n        React.useState(\"Создать\");\n    const [removePopupButtonText, setRemovePopupButtonText] =\n        React.useState(\"Да\");\n    //---------------------------------------------------------------------------------------------------------------------\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function handleCardDeleteClick(card) {\n        setIsDeleteCardPopup(true);\n        setDeletedCard(card);\n    }\n\n    //Функция закрытия всех попапов\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsDeleteCardPopup(false);\n        setDeletedCard({ link: \"\", name: \"\" });\n        setSelectedCard({ link: \"\", name: \"\" });\n        // setIsInfoToolTipPopupOpen(false);\n        setIsInfoToolTipPopup({ status: false, open: false });\n    }\n\n    //---------------------------------------------------------------------------------------------------------------------\n\n    // Настраиваем хук, который устанавливает колбэки. Функция будет вызвана после того, как будут внесены все изменения в DOM.\n    React.useEffect(() => {\n        setIsLoading(true);\n        // Чтение данных с сервера (информация о пользователе и карточках)\n        // Проверим, авторизован ли пользователь\n        if (isLoggedIn) {\n            Promise.all([api.getUserInfo(), api.getCards()])\n                .then(([user, cards]) => {\n                    setCurrentUser(user);\n                    setCards(cards);\n                })\n                .catch((err) => {\n                    console.log(err);\n                })\n                .finally(() => setIsLoading(false));\n        }\n    }, [isLoggedIn]);\n\n    // Функция, которая отвечает за закрытие попапа нажатием кнопки \"escape\"\n    React.useEffect(\n        () => {\n            function handleEscapeClick(evt) {\n                if (evt.key === \"Escape\") {\n                    closeAllPopups();\n                }\n            }\n            document.addEventListener(\"keyup\", handleEscapeClick);\n\n            return () => {\n                document.removeEventListener(\"keyup\", handleEscapeClick);\n            };\n        }, // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n\n    // Функция, которая отвечает за закрытие попапов по клику вне формы\n    React.useEffect(\n        () => {\n            function handleOverlayClick(evt) {\n                if (evt.target.classList.contains(\"popup\")) {\n                    closeAllPopups();\n                }\n            }\n            document.addEventListener(\"mousedown\", handleOverlayClick);\n\n            return () => {\n                document.removeEventListener(\"mousedown\", handleOverlayClick);\n            };\n        },\n        // колбэк-очистка\n        []\n    );\n\n    // Хук для проверки токена при каждом монтировании компонента App\n    React.useEffect(\n        () => {\n            handleIsToken();\n        }, // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n    // Проверяем есть ли токен в хранилище, если он есть, устанавливаем адрес почты и отпраляем пользователя на домашнюю страницу\n    function handleIsToken() {\n        const jwt = localStorage.getItem(\"jwt\");\n        if (jwt) {\n            auth.checkToken(jwt)\n                .then((res) => {\n                    setEmail(res.data.email);\n                    setIsLoggedIn(true);\n                    history.push(\"/home\");\n                })\n                .catch(() => {\n                    console.log(\"Переданный токен некорректен.\");\n                    setIsLoggedIn(false);\n                });\n        }\n    }\n\n    //---------------------------------------------------------------------------------------------------------------------\n\n    // Функция обновления пользователя\n    function handleUpdateUser(user) {\n        setProfilePopupButtonText(\"Сохранение...\");\n        api.editProfile(user)\n            .then((res) => {\n                setCurrentUser(res);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            .finally(() => {\n                setProfilePopupButtonText(\"Сохранить\");\n            });\n    }\n\n    function handleUpdateAvatar(avatar) {\n        setAvatarPopupButtonText(\"Сохранение...\");\n        api.renewAvatar(avatar) // 1й аргумент с типом String (avatarLink в Api.js:renewAvatar)\n            .then((avatar) => {\n                setCurrentUser(avatar);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            .finally(() => {\n                setAvatarPopupButtonText(\"Сохранить\");\n            });\n    }\n\n    // Функция добавления места\n    function handleAddPlaceSubmit(cardNew) {\n        setPlacePopupButtonText(\"Добавление...\");\n        api.addCard(cardNew)\n            .then((res) => {\n                setCards([res, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            .finally(() => {\n                setPlacePopupButtonText(\"Создать\");\n            });\n    }\n\n    //  Функция удаления карточки: устанавливаем текст на кнопку при удалении карточки\n    function handleCardDelete(card) {\n        setRemovePopupButtonText(\"Удаление...\");\n        // Исключаем из массива удаленную карточку\n        api.deleteCard(card._id)\n            .then(() => {\n                // Исключаем из массива удаленную карточку\n                const newCards = cards.filter(\n                    (currentCard) => currentCard._id !== card._id\n                );\n                // Обновляем состояние\n                setCards(newCards);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            .finally(() => {\n                setRemovePopupButtonText(\"Да\");\n            });\n    }\n\n    // Установка лайка карточкам\n    function handleCardLike(card) {\n        // Ввод переменной, где мы проверяем при помощи метода some, удовлетворяет ли какой-либо элемент массива условию, заданному в передаваемой функции.\n        const isLiked = card.likes.some((like) => like._id === currentUser._id);\n        api.changeLike(card._id, !isLiked)\n            .then((res) => {\n                setCards((condition) =>\n                    condition.map((currentCard) =>\n                        currentCard._id === card._id ? res : currentCard\n                    )\n                );\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n    // Проверяем зарегистрирован ли пользователь\n    function handleIsRegister(userEmail, userPassword, resetForm) {\n        auth.register(userEmail, userPassword)\n            .then((res) => {\n                setIsInfoToolTipPopup({ status: true, open: true });\n                // setIsInfoToolTipPopupOpen(true);\n                // setIsSuccess(true);\n                history.push(\"/signin\");\n                resetForm();\n            })\n            .catch((err) => {\n                if (err.status === 400) {\n                    console.log(\"400 - некорректно заполнено одно из полей\");\n                }\n                setIsInfoToolTipPopup({ status: false, open: true });\n                // setIsInfoToolTipPopupOpen(true);\n                // setIsSuccess(false);\n            });\n    }\n\n    function handleIsLogin(userEmail, userPassword, resetForm) {\n        auth.login(userEmail, userPassword)\n            .then((res) => {\n                if (res.token) {\n                    localStorage.setItem(\"jwt\", res.token);\n                    resetForm();\n                    setIsLoggedIn(true);\n                    setEmail(email);\n                    history.push(\"/home\");\n                }\n            })\n            .catch((err) => {\n                if (err.status === 400) {\n                    console.log(\"400 - не передано одно из полей\");\n                    // setIsSuccess(false);\n                    // setIsInfoToolTipPopupOpen(true);\n                } else if (err.status === 401) {\n                    console.log(\"401 - пользователь с email не найден\");\n                    // setIsInfoToolTipPopupOpen(true);\n                }\n                setIsInfoToolTipPopup({ status: false, open: true });\n            });\n    }\n\n    function handleSignOut() {\n        setIsLoggedIn(false);\n        localStorage.removeItem(\"jwt\");\n        history.push(\"/signin\");\n    }\n\n    //---------------------------------------------------------------------------------------------------------------------\n    return (\n        <div className=\"page\">\n            <CurrentUserContext.Provider value={currentUser}>\n                {/*текущее значение контекста из ближайшего подходящего Provider выше в дереве компонентов.*/}\n                <Header email={email} onSignOut={handleSignOut} />\n                <Switch>\n                    <ProtectedRoute\n                        exact\n                        path=\"/home\"\n                        isLoggedIn={isLoggedIn}\n                        onEditAvatar={handleEditAvatarClick}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onCardClick={handleCardClick}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDeleteClick}\n                        cards={cards}\n                        component={Main}\n                        isLoading={isLoading}\n                    />\n                    <Route path=\"/signin\">\n                        <Login onLogin={handleIsLogin} history={history} />\n                    </Route>\n                    <Route path=\"/signup\">\n                        <Register\n                            onRegister={handleIsRegister}\n                            history={history}\n                        />\n                    </Route>\n                    <Route>\n                        {isLoggedIn ? (\n                            <Redirect to=\"/home\" />\n                        ) : (\n                            <Redirect to=\"/signin\" />\n                        )}\n                        {/* Если пользователь залогинен, отправляем его на домашнюю страницу, если нет, то на страницу с логином*/}\n                    </Route>\n                </Switch>\n\n                <Footer />\n\n                {/* Добавление карточки */}\n                <AddPlacePopup\n                    buttonSubmitText={placePopupButtonText}\n                    isOpen={isAddPlacePopupOpen}\n                    onAddPlace={handleAddPlaceSubmit}\n                    onClose={closeAllPopups}\n                />\n\n                {/* Обновление аватара пользователя */}\n                <EditAvatarPopup\n                    buttonSubmitText={avatarPopupButtonText}\n                    isOpen={isEditAvatarPopupOpen}\n                    onUpdateAvatar={handleUpdateAvatar}\n                    onClose={closeAllPopups}\n                />\n\n                {/* Редактирование профиля пользователя */}\n                <EditProfilePopup\n                    buttonSubmitText={profilePopupButtonText}\n                    isOpen={isEditProfilePopupOpen}\n                    onUpdateUser={handleUpdateUser}\n                    onClose={closeAllPopups}\n                />\n\n                <DeleteCardPopup\n                    isOpen={isDeleteCardPopup}\n                    buttonSubmitText={removePopupButtonText}\n                    card={deletedCard}\n                    onSubmitDeleteCard={handleCardDelete}\n                    onClose={closeAllPopups}\n                />\n\n                {/* Просмотр фотографии */}\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n\n                <InfoToolTip\n                    isOpen={isInfoToolTipPopup.open}\n                    //isOpen={isInfoToolTipPopupOpen}\n                    onClose={closeAllPopups}\n                    //isSuccess={isInfoToolTipPopupOpen}\n                    isSuccess={isInfoToolTipPopup.status}\n                />\n            </CurrentUserContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}